openapi: 3.0.0
info:
  version: 1.0.0
  title: REST API Docs
  description: This is the API
servers:
  - url: http://localhost:8000
components:
  schemas:
    refresh_token:
      type: string
      example: refresh_token=abcde12345; Path=/; HttpOnly
    verificationCode:
      type: string
      example: "1212121"
    resetToken:
      type: string
      example: "1212121"
    access_token:
      type: string
      example: access_token=abcde12345; Path=/; HttpOnly
  parameters:
    refresh_token:
      schema:
        $ref: "#/components/schemas/refresh_token"
      required: true
      name: refresh_token
      in: cookie
    verificationCode:
      schema:
        $ref: "#/components/schemas/verificationCode"
      required: true
      name: verificationCode
      in: path
    resetToken:
      schema:
        $ref: "#/components/schemas/resetToken"
      required: true
      name: resetToken
      in: path
    access_token:
      schema:
        $ref: "#/components/schemas/access_token"
      required: true
      name: access_token
      in: cookie
paths:
  /api/auth/register:
    post:
      tags:
        - Auth
      description: Register User
      summary: Register User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the user
                  example: John Doe
                password:
                  type: string
                  description: Name of the user
                  example: John Doe
                email:
                  type: string
                  format: email
                  description: Email address of the user
                  example: John Doe
                passwordConfirm:
                  type: string
                  example: stringPassword123
              required:
                - name
                - password
                - email
                - passwordConfirm
      responses:
        "200":
          description: Object with user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                required:
                  - status
        "400":
          description: Bad request
  /api/auth/login:
    post:
      tags:
        - Auth
      description: Login into App
      summary: Login User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: Name of the user
                  example: John Doe
                email:
                  type: string
                  format: email
                  description: Email address of the user
                  example: John Doe
              required:
                - password
                - email
      responses:
        "200":
          description: Object with user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  access_token:
                    type: string
                required:
                  - status
                  - access_token
        "400":
          description: Bad request
  /api/auth/refresh:
    get:
      tags:
        - Auth
      description: Get New Token with Refresh Token User
      summary: Get New Token with Refresh Token User
      parameters:
        - $ref: "#/components/parameters/refresh_token"
      responses:
        "200":
          description: Object with user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  access_token:
                    type: string
                required:
                  - status
                  - access_token
        "400":
          description: Bad request
  /api/verifyemail/{verificationCode}:
    get:
      tags:
        - Auth
      description: Verifry Email after Register
      summary: Verification Code from Register User
      parameters:
        - $ref: "#/components/parameters/verificationCode"
      responses:
        "200":
          description: Object with user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  access_token:
                    type: string
                required:
                  - status
                  - access_token
        "400":
          description: Bad request
  /api/auth/forgotpassword:
    post:
      tags:
        - Auth
      description: Request for Forgot Password
      summary: Request for Forgot Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email address of the user
                  example: John Doe
              required:
                - email
      responses:
        "200":
          description: Object with user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                required:
                  - status
        "400":
          description: Bad request
  api/auth/resetpassword/{resetToken}:
    patch:
      tags:
        - Auth
      description: Reset Password
      summary: Reset Password
      parameters:
        - $ref: "#/components/parameters/resetToken"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: Name of the user
                  example: John Doe
                passwordConfirm:
                  type: string
                  example: stringPassword123
              required:
                - password
                - passwordConfirm
      responses:
        "200":
          description: Object with user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                required:
                  - status
        "400":
          description: Bad request
  /api/auth/logout:
    get:
      tags:
        - Auth
      description: LogOut User
      summary: LogOut User
      parameters:
        - $ref: "#/components/parameters/access_token"
      responses:
        "200":
          description: Object with user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                required:
                  - status
        "400":
          description: Bad request
  /api/user/me:
    get:
      tags:
        - User
      description: Get User Detail
      summary: Get User Detail
      parameters:
        - $ref: "#/components/parameters/access_token"
      responses:
        "200":
          description: Object with user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Unique identifier for the user
                        example: 35681813-8ad3-476d-99f2-56d5f5647127
                      name:
                        type: string
                        description: Name of the user
                        example: John Doe
                      email:
                        type: string
                        format: email
                        description: Email address of the user
                        example: John Doe
                      photo:
                        type: string
                        format: email
                        description: User's profile photo
                        example: John Doe
                      role:
                        type: string
                        description: Role of the user
                        example: user
                      createdAt:
                        type: string
                        format: date-time
                        description: Date and time when the user was created
                        example: 2023-11-28T09:09:47.319Z
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date and time when the user was last updated
                        example: 2023-11-28T09:09:47.319Z
                      provider:
                        type: string
                        nullable: true
                        description: User's provider information
                    required:
                      - id
                      - name
                      - email
                      - photo
                      - createdAt
                      - updatedAt
                required:
                  - status
                  - data
        "204":
          description: No content - successful operation
